name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        operating-system: [ubuntu-latest, windows-latest, macos-latest]
        php-versions: ['7.1', '7.2', '7.3', '7.4', '8.0']

    runs-on: ${{ matrix.operating-system }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHPUnit 7
      uses: shivammathur/setup-php@v2
      if: matrix.php-versions == '7.1'
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: xdebug    
        tools: php-cs-fixer, psalm, phpunit-7.5.20
    
    - name: Setup PHPUnit 8
      uses: shivammathur/setup-php@v2
      if: matrix.php-versions == '7.2'
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: xdebug    
        tools: php-cs-fixer, psalm, phpunit-8.5.13  

    - name: Setup PHPUnit 8
      uses: shivammathur/setup-php@v2
      if: matrix.php-versions >= '7.3'
      with:
        php-version: ${{ matrix.php-versions }}
        coverage: xdebug    
        tools: php-cs-fixer, psalm, phpunit

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-versions }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-versions }}-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress --no-suggest --dev

 #   - name: Run Psalm
 #     run: psalm
    
    - name: Run PHPUnit 7
      run: phpunit
